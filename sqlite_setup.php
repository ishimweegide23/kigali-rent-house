<?php
// SQLite Database Setup - No MySQL Required!
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>SQLite Database Setup</h1>";
echo "<style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    .success { color: green; }
    .error { color: red; }
    .warning { color: orange; }
    .info { color: blue; }
    .step { margin: 20px 0; padding: 10px; border-left: 4px solid #ccc; }
    .step h3 { margin-top: 0; }
    pre { background: #f5f5f5; padding: 10px; border-radius: 5px; }
</style>";

echo "<div class='step'>";
echo "<h3>Step 1: Check SQLite Support</h3>";

if (extension_loaded('pdo_sqlite')) {
    echo "<p class='success'>✓ SQLite PDO extension is available</p>";
} else {
    echo "<p class='error'>✗ SQLite PDO extension is not available</p>";
    echo "<p>This is rare with XAMPP. Please check your PHP configuration.</p>";
    exit;
}

echo "</div>";

echo "<div class='step'>";
echo "<h3>Step 2: Create SQLite Database</h3>";

$db_file = 'contact_messages.db';

try {
    // Create SQLite database
    $pdo = new PDO("sqlite:$db_file");
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ATTR_ERRMODE_EXCEPTION);
    
    echo "<p class='success'>✓ SQLite database created: $db_file</p>";
    
    // Create table
    $sql = "CREATE TABLE IF NOT EXISTS contact_messages (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        email TEXT NOT NULL,
        phone TEXT,
        subject TEXT,
        message TEXT NOT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )";
    
    $pdo->exec($sql);
    echo "<p class='success'>✓ Contact messages table created</p>";
    
    // Show table structure
    $stmt = $pdo->query("PRAGMA table_info(contact_messages)");
    echo "<h4>Table Structure:</h4>";
    echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr><th>Column</th><th>Type</th><th>Not Null</th><th>Default</th><th>Primary Key</th></tr>";
    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        echo "<tr>";
        echo "<td>" . htmlspecialchars($row['name']) . "</td>";
        echo "<td>" . htmlspecialchars($row['type']) . "</td>";
        echo "<td>" . ($row['notnull'] ? 'Yes' : 'No') . "</td>";
        echo "<td>" . htmlspecialchars($row['dflt_value'] ?? 'NULL') . "</td>";
        echo "<td>" . ($row['pk'] ? 'Yes' : 'No') . "</td>";
        echo "</tr>";
    }
    echo "</table>";
    
} catch (PDOException $e) {
    echo "<p class='error'>✗ Error creating SQLite database: " . $e->getMessage() . "</p>";
    exit;
}

echo "</div>";

echo "<div class='step'>";
echo "<h3>Step 3: Test Database Operations</h3>";

try {
    // Test inserting a record
    $stmt = $pdo->prepare("INSERT INTO contact_messages (name, email, phone, subject, message) VALUES (?, ?, ?, ?, ?)");
    $stmt->execute(['Test User', 'test@example.com', '123456789', 'Test Subject', 'This is a test message from SQLite setup']);
    
    echo "<p class='success'>✓ Test record inserted successfully</p>";
    
    // Count records
    $stmt = $pdo->query("SELECT COUNT(*) as count FROM contact_messages");
    $count = $stmt->fetch(PDO::FETCH_ASSOC)['count'];
    echo "<p class='info'>Total messages in database: <strong>$count</strong></p>";
    
    // Show recent messages
    $stmt = $pdo->query("SELECT * FROM contact_messages ORDER BY created_at DESC LIMIT 5");
    echo "<h4>Recent Messages:</h4>";
    echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr><th>ID</th><th>Name</th><th>Email</th><th>Subject</th><th>Created</th></tr>";
    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        echo "<tr>";
        echo "<td>" . $row['id'] . "</td>";
        echo "<td>" . htmlspecialchars($row['name']) . "</td>";
        echo "<td>" . htmlspecialchars($row['email']) . "</td>";
        echo "<td>" . htmlspecialchars($row['subject']) . "</td>";
        echo "<td>" . $row['created_at'] . "</td>";
        echo "</tr>";
    }
    echo "</table>";
    
} catch (PDOException $e) {
    echo "<p class='error'>✗ Error testing database: " . $e->getMessage() . "</p>";
    exit;
}

echo "</div>";

echo "<div class='step'>";
echo "<h3>Step 4: Create SQLite Configuration</h3>";

// Create SQLite config file
$config_content = "<?php
// SQLite Database Configuration - Auto-generated by sqlite_setup.php
\$db_file = '$db_file';

function getDatabaseConnection() {
    global \$db_file;
    
    try {
        \$pdo = new PDO(\"sqlite:\$db_file\");
        \$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ATTR_ERRMODE_EXCEPTION);
        return \$pdo;
    } catch (PDOException \$e) {
        throw new Exception(\"Database connection failed: \" . \$e->getMessage());
    }
}

function testDatabaseConnection() {
    try {
        \$pdo = getDatabaseConnection();
        return ['success' => true, 'message' => 'SQLite database connection successful!'];
    } catch (Exception \$e) {
        return ['success' => false, 'message' => \$e->getMessage()];
    }
}
?>";

if (file_put_contents('config_sqlite.php', $config_content)) {
    echo "<p class='success'>✓ SQLite configuration file created: config_sqlite.php</p>";
} else {
    echo "<p class='error'>✗ Could not create config_sqlite.php</p>";
}

echo "</div>";

echo "<div class='step'>";
echo "<h3>Step 5: Update Contact Form for SQLite</h3>";

// Create SQLite version of contact.php
$contact_sqlite_content = "<?php
// Set content type to HTML for proper rendering
header('Content-Type: text/html; charset=UTF-8');

// Enable error reporting for debugging
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Include SQLite database configuration
require_once 'config_sqlite.php';

// Initialize variables
\$name = \$email = \$phone = \$subject = \$message = '';
\$errors = [];
\$success = false;

// Check if form is submitted
if (\$_SERVER['REQUEST_METHOD'] === 'POST') {
    // Debug: Log the POST data
    error_log(\"Form submitted with data: \" . print_r(\$_POST, true));
    
    // Sanitize and validate inputs
    \$name = trim(filter_input(INPUT_POST, 'name', FILTER_SANITIZE_STRING));
    \$email = trim(filter_input(INPUT_POST, 'email', FILTER_SANITIZE_EMAIL));
    \$phone = trim(filter_input(INPUT_POST, 'phone', FILTER_SANITIZE_STRING));
    \$subject = trim(filter_input(INPUT_POST, 'subject', FILTER_SANITIZE_STRING));
    \$message = trim(filter_input(INPUT_POST, 'message', FILTER_SANITIZE_STRING));

    // Validate required fields
    if (empty(\$name)) {
        \$errors['name'] = 'Full name is required';
    }
    
    if (empty(\$email)) {
        \$errors['email'] = 'Email address is required';
    } elseif (!filter_var(\$email, FILTER_VALIDATE_EMAIL)) {
        \$errors['email'] = 'Please enter a valid email address';
    }
    
    if (empty(\$message)) {
        \$errors['message'] = 'Message is required';
    }

    // If no errors, proceed with database insertion
    if (empty(\$errors)) {
        try {
            // Get database connection using the configuration
            \$pdo = getDatabaseConnection();
            
            // Prepare and execute SQL statement
            \$stmt = \$pdo->prepare(\"
                INSERT INTO contact_messages 
                (name, email, phone, subject, message, created_at) 
                VALUES (?, ?, ?, ?, ?, datetime('now'))
            \");
            
            \$stmt->execute([\$name, \$email, \$phone, \$subject, \$message]);
            
            // Set success flag
            \$success = true;
            
            // Clear form fields
            \$name = \$email = \$phone = \$subject = \$message = '';
            
        } catch (Exception \$e) {
            \$errors['database'] = 'Database error: ' . \$e->getMessage();
        }
    }
}

// Output HTML response
?>
<!DOCTYPE html>
<html lang=\"en\">
<head>
  <meta charset=\"UTF-8\">
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
  <title>Message Received | Kigali Housing and Rental Platform</title>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #F8F9FA;
      color: #1A1A2E;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      padding: 20px;
      text-align: center;
    }
    
    .response-container {
      background-color: white;
      padding: 40px;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      max-width: 600px;
      width: 100%;
    }
    
    h1 {
      color: #2D5D7C;
      margin-bottom: 20px;
    }
    
    .success-message {
      color: #2E8B57;
      font-size: 1.2rem;
      margin-bottom: 30px;
    }
    
    .error-message {
      color: #E63946;
      font-size: 1.2rem;
      margin-bottom: 30px;
    }
    
    .btn {
      display: inline-block;
      padding: 12px 30px;
      background-color: #F9A825;
      color: white;
      border-radius: 30px;
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s ease;
      border: none;
      cursor: pointer;
      font-size: 1rem;
    }
    
    .btn:hover {
      background-color: #e69500;
      transform: translateY(-3px);
      box-shadow: 0 6px 20px rgba(249, 168, 37, 0.4);
    }
    
    .errors-list {
      text-align: left;
      margin: 20px 0;
      padding-left: 20px;
    }
    
    .errors-list li {
      margin-bottom: 8px;
      color: #E63946;
    }
  </style>
</head>
<body>
  <div class=\"response-container\">
    <?php if (\$success): ?>
      <h1>Thank You!</h1>
      <p class=\"success-message\">Your message has been successfully sent. We'll get back to you soon.</p>
      <a href=\"contact.html\" class=\"btn\">Back to Contact Page</a>
    <?php else: ?>
      <h1>Oops!</h1>
      
      <?php if (!empty(\$errors)): ?>
        <p class=\"error-message\">There were some issues with your submission:</p>
        <ul class=\"errors-list\">
          <?php foreach (\$errors as \$error): ?>
            <li><?php echo htmlspecialchars(\$error); ?></li>
          <?php endforeach; ?>
        </ul>
      <?php else: ?>
        <p class=\"error-message\">There was an unexpected error processing your request.</p>
      <?php endif; ?>
      
      <a href=\"contact.html\" class=\"btn\">Please try again</a>
    <?php endif; ?>
  </div>
</body>
</html>";

if (file_put_contents('contact_sqlite.php', $contact_sqlite_content)) {
    echo "<p class='success'>✓ SQLite contact handler created: contact_sqlite.php</p>";
} else {
    echo "<p class='error'>✗ Could not create contact_sqlite.php</p>";
}

echo "</div>";

echo "<div class='step'>";
echo "<h3>Step 6: Update Contact Form Action</h3>";

echo "<p class='info'>To use the SQLite version, you need to update your contact form action:</p>";
echo "<p class='info'>In your contact.html file, change:</p>";
echo "<pre>&lt;form action=\"contact.php\" method=\"POST\"&gt;</pre>";
echo "<p class='info'>To:</p>";
echo "<pre>&lt;form action=\"contact_sqlite.php\" method=\"POST\"&gt;</pre>";

echo "</div>";

echo "<div class='step'>";
echo "<h3>Step 7: Create Message Viewer</h3>";

// Create a simple message viewer
$viewer_content = "<?php
// Contact Messages Viewer
require_once 'config_sqlite.php';

try {
    \$pdo = getDatabaseConnection();
    \$stmt = \$pdo->query(\"SELECT * FROM contact_messages ORDER BY created_at DESC\");
    \$messages = \$stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (Exception \$e) {
    die(\"Error: \" . \$e->getMessage());
}
?>
<!DOCTYPE html>
<html lang=\"en\">
<head>
    <meta charset=\"UTF-8\">
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
    <title>Contact Messages - Kigali Housing</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { border-collapse: collapse; width: 100%; margin-top: 20px; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        .message { max-width: 300px; word-wrap: break-word; }
    </style>
</head>
<body>
    <h1>Contact Messages</h1>
    <p>Total messages: <strong><?php echo count(\$messages); ?></strong></p>
    
    <table>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Subject</th>
            <th>Message</th>
            <th>Date</th>
        </tr>
        <?php foreach (\$messages as \$msg): ?>
        <tr>
            <td><?php echo \$msg['id']; ?></td>
            <td><?php echo htmlspecialchars(\$msg['name']); ?></td>
            <td><?php echo htmlspecialchars(\$msg['email']); ?></td>
            <td><?php echo htmlspecialchars(\$msg['phone']); ?></td>
            <td><?php echo htmlspecialchars(\$msg['subject']); ?></td>
            <td class=\"message\"><?php echo htmlspecialchars(\$msg['message']); ?></td>
            <td><?php echo \$msg['created_at']; ?></td>
        </tr>
        <?php endforeach; ?>
    </table>
</body>
</html>";

if (file_put_contents('view_messages.php', $viewer_content)) {
    echo "<p class='success'>✓ Message viewer created: view_messages.php</p>";
} else {
    echo "<p class='error'>✗ Could not create view_messages.php</p>";
}

echo "</div>";

echo "<div class='step'>";
echo "<h3>Setup Complete!</h3>";
echo "<p class='success'>✓ SQLite database setup is complete!</p>";
echo "<p class='info'>Your contact form should now work without needing MySQL.</p>";
echo "<p class='info'>To test:</p>";
echo "<ol>";
echo "<li>Update your contact.html form action to: <code>contact_sqlite.php</code></li>";
echo "<li>Submit a test message from your contact page</li>";
echo "<li>View messages at: <a href='view_messages.php'>view_messages.php</a></li>";
echo "</ol>";
echo "</div>";
?> 